kafka-producer:
  instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  concurrent-processor:
    wait-timeout: 10000
  consumer:
    container-factory:
      concurrency: 25
      properties:
        pool-timeout: 30000
  rest-template:
    redirect:
      read-timeout: 1000
      connect-timeout: 500

server:
  port: 0

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_URI:http://localhost:8080/eureka}
  instance:
    appname: producer
    instance-id: producer-${random.value}


spring:
  application:
    name: producer
  kafka:
    consumer:
      topicName: topicOutbound
      bootstrap-servers: localhost:19092,localhost:29092,localhost:39092
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      topicName: topicInbound
      bootstrap-servers: localhost:19092,localhost:29092,localhost:39092
      key-deserializer: org.apache.kafka.common.serialization.StringSerializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonSerializer
